# Default values for rook-gitlab.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# the region is used by s3
rook:
  region: &region us-east-1
  s3config: &s3config connection-config #change to configmap from 
  storename: git-store
  storenamespace: rook-ceph

  buckets: &buckets
    lfs: &lfs lfs
    artifacts: &artifacts artifactsbucket
    uploads: &uploads uploads        
    packages: &packages packages
    externalDiffs: &externalDiffs diffs
    ## doc/charts/globals.md#pseudonymizer-settings
    pseudonymizer: &pseudo pseudo
    backups: &backups backups
    tmpBucket: &backups_tmp tmp
# anchor notes: https://yaml.org/spec/1.2/spec.html

# TODO replace $BUCKET_SECRET with yaml anchors https://confluence.atlassian.com/bitbucket/yaml-anchors-960154027.html

# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# securityContext: true
#   # runAsUser: 1000

# resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


# tolerations: []

# affinity: {}

gitlab:
  
  # TODO: remove this. It's only in here because I was having issues.
  # https://gitlab.com/gitlab-org/charts/gitlab/-/issues/1898
  certmanager:
    createCustomResource: false
  #   install: false
  #   rbac:
  #     create: false
  #   serviceAccount:
  #     create: false
    

  # aws_host: setBy_install.sh
  # aws_access_key_id: setBy_install.sh
  # aws_secret_access_key: setBy_install.sh

  ## Automatic shared secret generation
  ## doc/installation/secrets.md
  ## doc/charts/shared-secrets
  shared-secrets:
    enabled: true
    rbac:
      create: true
        # TODO specify secrets for the below sections

  # https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/doc/charts/globals.md#connection
  gitlab:
    unicorn: &init_cont
      s3config: *s3config
      buckets:
        <<: *buckets

      # '/etc/gitlab/objectstorage/lfs', "/etc/gitlab/objectstorage/uploads",
      # extraVolumeMounts: |
      #   - name: connection
      #     mountPath: "/etc/gitlab/objectstorage/"
      #     readOnly: true
      
      extraVolumes: |
        - name: connection
          configMap:
            name: {{ .Values.s3config }}
        - name: objectstorage
          emptyDir: {}

      ## Init containers configure gitlab's s3 credentials by altering these files in the pods with keys from the ceph user
      # 1. backups are in `~/.s3cfg` @ see https://s3tools.org/kb/item14.htm
      # 2. appConfig bucket storage is in `/etc/gitlab/objectstorage/*` @ see https://gitlab.com/gitlab-org/charts/gitlab/issues/1920
      ## more references
        # gitlab issue https://gitlab.com/gitlab-org/charts/gitlab/issues/1920
        # rook docs: https://rook.io/docs/rook/v1.2/ceph-object.html
      extraInitContainers: |
        - name: artifacts
          image: bhgedigital/envsubst:latest
          command:  [ "/bin/sh", "-c", "cat /connection | envsubst | tee /etc/gitlab/objectstorage/artifacts" ]
          env:
          - name: ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.buckets.artifacts }}
                key: AWS_ACCESS_KEY_ID #accesskey?
          - name: AWS_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.buckets.artifacts }}
                key: BUCKET_HOST #user host key
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.buckets.artifacts }}
                key: AWS_SECRET_ACCESS_KEY
          volumeMounts:
          - name: connection
            mountPath: "/connection"
            subPath: connection
            readOnly: true
          - name: objectstorage
            mountPath: "/etc/gitlab/objectstorage/"
          
        - name: uploads
          image: bhgedigital/envsubst:latest
          command: [ "/bin/sh", "-c", "cat /connection | envsubst | tee /etc/gitlab/objectstorage/uploads" ]
          env:
          - name: ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.buckets.uploads }}
                key: AWS_ACCESS_KEY_ID #accesskey?
          - name: AWS_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.buckets.uploads }}
                key: BUCKET_HOST
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.buckets.uploads }}
                key: AWS_SECRET_ACCESS_KEY
          volumeMounts:
          - name: connection
            mountPath: "/connection"
            subPath: connection
            readOnly: true
          - name: objectstorage
            mountPath: "/etc/gitlab/objectstorage/"
        - name: externaldiffs
          image: bhgedigital/envsubst:latest
          command: [ "/bin/sh", "-c", "cat /connection | envsubst | tee /etc/gitlab/objectstorage/external_diffs" ]
          env:
          - name: ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.buckets.externalDiffs }}
                key: AWS_ACCESS_KEY_ID #accesskey?
          - name: AWS_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.buckets.externalDiffs }}
                key: BUCKET_HOST
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.buckets.externalDiffs }}
                key: AWS_SECRET_ACCESS_KEY
          volumeMounts:
          - name: connection
            mountPath: "/connection"
            subPath: connection
            readOnly: true
          - name: objectstorage
            mountPath: "/etc/gitlab/objectstorage/"
        - name: lfs
          image: bhgedigital/envsubst:latest
          command: [ "/bin/sh", "-c", "cat /connection | envsubst | tee /etc/gitlab/objectstorage/lfs" ]
          env:
          - name: ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.buckets.lfs }}
                key: AWS_ACCESS_KEY_ID #accesskey?
          - name: AWS_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.buckets.lfs }}
                key: BUCKET_HOST
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.buckets.lfs }}
                key: AWS_SECRET_ACCESS_KEY
          volumeMounts:
          - name: connection
            mountPath: "/connection"
            subPath: connection
            readOnly: true
          - name: objectstorage
            mountPath: "/etc/gitlab/objectstorage/"
        - name: pseudo
          image: bhgedigital/envsubst:latest
          command: [ "/bin/sh", "-c", "cat /connection | envsubst | tee /etc/gitlab/objectstorage/pseudonymizer" ]
          env:
          - name: ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.buckets.pseudonymizer }}
                key: AWS_ACCESS_KEY_ID 
          - name: AWS_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.buckets.pseudonymizer }}
                key: BUCKET_HOST
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.buckets.pseudonymizer }}
                key: AWS_SECRET_ACCESS_KEY
          volumeMounts:
          - name: connection
            mountPath: "/connection"
            subPath: connection
            readOnly: true
          - name: objectstorage
            mountPath: "/etc/gitlab/objectstorage/"

    gitaly:
      <<: *init_cont

    gitlab-shell:
      <<: *init_cont
    
    mailroom:
      <<: *init_cont
    
    migrations:
      <<: *init_cont
    
    sidekiq:
      <<: *init_cont
    
    task-runner:
      <<: *init_cont
  
  registry:
    # https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/doc/charts/registry/index.md
    enabled: false
  #   storage:
  #     secret: registry-storage
  #     key: config
  
  global:
    edition: ce
    #registry:
      # https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/doc/charts/globals.md#configure-registry-settings
      #enabled: false
      #bucket: gitlab-registry-storage
    hosts:
      # https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/doc/charts/globals.md#configure-host-settings
      https: false
      #domain: 172.16.10.202
  
    ingress:
      configureCertmanager: false
      enabled: true
      tls:
        enabled: false
      gitlab:
        https: false
      registry:
        https: false
      minio:
        https: false
        
        
    minio:
      # https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/doc/charts/globals.md#configure-minio-settings
      enabled: false

    ## Installation & configuration of gitlab/gitlab-runner
    ## See requirements.yaml for current version
    gitlab-runner:
      install: false
    
    operator:
      enabled: false
      # https://docs.gitlab.com/charts/installation/operator.html
      rollout:
        # Enables automatic pause for deployment rollout. This must be set to `true` to fix
        # Helm's issue with 3-way merge. See:
        #   https://gitlab.com/gitlab-org/charts/gitlab/issues/1262
        #   https://github.com/helm/helm/issues/3805
        autoPause: true

    runners:
      locked: true
      cache:
        #TODO: set the bucket name and its host here
        cacheType: s3
        s3BucketName: runner-cache
        cacheShared: true
        s3BucketLocation: *region
        s3CachePath: gitlab-runner
        s3CacheInsecure: false

        ## GitLab operator is Alpha. Not for production use.
    



  ###################################STORAGE STUFF###############################

  # according to this https://gitlab.com/gitlab-org/charts/gitlab/-/tree/master/doc/advanced/external-object-storage
  # each storage type needs its own bucket, but they can share a secret.
  # so you can probably use a shared user for all the buckets

  ## object storage settings for future: https://docs.gitlab.com/ee/administration/job_artifacts.html#s3-compatible-connection-settings

      ## doc/charts/globals.md#lfs-artifacts-uploads-packages-external-mr-diffs
      ## example storage settings: https://gitlab.com/gitlab-org/charts/gitlab/blob/master/examples/values-external-objectstorage.yaml
    appConfig:

      # https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/doc/charts/globals.md#configure-appconfig-settings
      lfs: &storage-anchor
        # https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/doc/charts/globals.md#lfs-artifacts-uploads-packages-and-external-mr-diffs
        enabled: true
        proxy_download: true
        bucket: *lfs
        connection: {}
          # https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/doc/charts/globals.md#connection
          
          

      # the following configurations should be overriden without the user caring, but I'm putting them here for now    

      artifacts:
        <<: *storage-anchor
        bucket: *artifacts

      uploads:
        <<: *storage-anchor
        bucket: *uploads
        
      packages:
        <<: *storage-anchor
        bucket: *packages
        
      externalDiffs:
        when:
        <<: *storage-anchor
        bucket: *externalDiffs

      ## doc/charts/globals.md#pseudonymizer-settings
      pseudonymizer:
        # https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/doc/charts/globals.md#pseudonymizer-settings
        configMap:
        <<: *storage-anchor
        bucket: *pseudo
          # key:
      
      backups:
        # <<: *storage-anchor
        bucket: *backups
        tmpBucket: *backups_tmp
      
      omniauth:
      #https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/doc/charts/globals.md#omniauth
        enabled: false

    
